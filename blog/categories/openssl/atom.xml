<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OpenSSL | カソクスルソウゾウリョク]]></title>
  <link href="http://ywatai.github.com/blog/categories/openssl/atom.xml" rel="self"/>
  <link href="http://ywatai.github.com/"/>
  <updated>2012-03-07T02:15:55+09:00</updated>
  <id>http://ywatai.github.com/</id>
  <author>
    <name><![CDATA[ywatai]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SSL証明書のトラブルシュートに openssl]]></title>
    <link href="http://ywatai.github.com/blog/2012/03/07/dump-ssl-certificates-with-openssl/"/>
    <updated>2012-03-07T01:38:00+09:00</updated>
    <id>http://ywatai.github.com/blog/2012/03/07/dump-ssl-certificates-with-openssl</id>
    <content type="html"><![CDATA[<p>仕事柄、時折ヒトサマからお預かりしたサーバ証明書がらみでトラブルシュートが
必要になることがあります。そんなときには openssl コマンドの出番な訳ですが、
滅多に使わないので使い方なんて覚えていない訳ですよ。えぇ。</p>

<p>そして、その度に使い方を調べるのにやたらと時間を食う、という...
そんな残念な自分のためのよく使うコマンドリストです。</p>

<!-- more -->


<h2>秘密鍵と証明書のペアが一致するか検証する</h2>

<p>まずは、キーペアが間違っていないか検証します。これが駄目ならもうあきらめるしか。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl s_server -key &lt;サーバ鍵> -cert &lt;証明書ファイル></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>問題がなければ openssl のサーバが立ち上がるはずです。同じくopenssl の s_clientコマンドで
以下のようにしてつないでみれば証明書の中身も確認できます。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl s_server -key &lt;サーバ鍵> -cert &lt;証明書ファイル></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>証明書チェインがつながっているか検証する</h2>

<p>続いてよくやる作業としては、証明書チェインの検証があります。チェインが切れていても
ブラウザによってはよしなにやってくれるため気づかないこともありますが、かっこ悪いですしね。
s_server のオプションを眺めてみるとそれっぽいものもありますが、私は普段はサーバを上げずに
検証できる verify コマンドを使っています。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl verify -CAfile &lt;CA証明書> &lt;証明書ファイル></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>検証候補のCA証明書が複数あって、かつ1ディレクトリにまとめてある場合には以下も使えます。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl verify -CApath &lt;CA証明書ディレクトリのパス> &lt;証明書ファイル></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>証明書の中身を人間が読める形式でダンプする</h2>

<p>どうも検証が通らなくて、何かおかしいぞ、と言うときには、その証明書が何者なのかを調べる
ことになる訳です。</p>

<p>x509形式の場合には、以下で人間が読める形式にダンプ => issuer でググるのが個人的な定番。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl x509 -in &lt;証明書ファイル> -text</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>過去に PKCS#7 なる形式の証明書が紛れ込んでいることがあったのですが、その場合はまず以下のようにして
証明書を取り出せば同様にいけました。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>openssl pkcs7 -in &lt;証明書ファイル> -print_certs</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>...証明書の形式は、なんだかいろいろあってよくわかりません。</p>

<p>覚える気もないけどな！</p>
]]></content>
  </entry>
  
</feed>
